import socket
import os
from tqdm import tqdm

def send_file(sock, filename):
    # Get the size of the file
    filesize = os.path.getsize(filename)
    # Send the filename and filesize
    sock.send(f"{filename}{SEPARATOR}{filesize}".encode())

    # Start sending the file
    progress = tqdm(range(filesize), f"Sending {filename}", unit="B", unit_scale=True, unit_divisor=1024)
    with open(filename, "rb") as f:
        for _ in progress:
            # Read the bytes from the file
            bytes_read = f.read(BUFFER_SIZE)
            if not bytes_read:
                # File transmitting is done
                break
            # We use sendall to assure transmission in busy networks
            sock.sendall(bytes_read)
            # Update the progress bar
            progress.update(len(bytes_read))
    # Close the file
    f.close()

if __name__ == '__main__':
    SEPARATOR = "<SEPARATOR>"
    BUFFER_SIZE = 4096  # Send 4096 bytes each time step

    # Define host and port variables
    my_host = '192.168.43.85'
    my_port = 8080

    # Create the socket object
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    try:
        # Connect to the server
        sock.connect((my_host, my_port))

        # Get the file path to send
        filename = input("Enter the path of the file to send: ")
        send_file(sock, filename)

        print(f"Successfully sent file: {filename}")

    except Exception as e:
        print(f"Error sending file: {e}")

    finally:
        # Close the connection
        sock.close()