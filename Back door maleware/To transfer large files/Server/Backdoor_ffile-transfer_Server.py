import socket
import os
from tqdm import tqdm

def receive_file(conn, buffer_size):
    # Receive the file infos
    SEPARATOR = "<SEPARATOR>"
    received = conn.recv(buffer_size).decode()
    filename, filesize = received.split(SEPARATOR)
    # Convert to integer
    filesize = int(filesize)

    # Start receiving the file from the socket
    # and writing to the file stream
    progress = tqdm(range(filesize), f"Receiving {filename}", unit="B", unit_scale=True, unit_divisor=1024)
    with open(filename, "wb") as f:
        for _ in progress:
            # Read 1024 bytes from the socket (receive)
            bytes_read = conn.recv(buffer_size)
            if not bytes_read:
                # Nothing is received
                # File transmitting is done
                break
            # Write to the file the bytes we just received
            f.write(bytes_read)
            # Update the progress bar
            progress.update(len(bytes_read))
    # Close the file
    f.close()

def connection():
    HOST = '192.168.43.85'
    PORT = 8080
    BUFFER_SIZE = 4096  # Receive 4096 bytes each time step
    SEPARATOR = "<SEPARATOR>"

    s = socket.socket()
    s.bind((HOST, PORT))
    s.listen(1)
    print('[+] Listening for incoming TCP connection on port 8080')
    conn, addr = s.accept()
    print('[+] We got a connection from: ', addr)

    try:
        receive_file(conn, BUFFER_SIZE)
        print('[+] File transfer complete')
    except Exception as e:
        print(f"[-] Error: {e}")
    finally:
        # Close the connection
        conn.close()
        s.close()

def main():
    connection()

main()